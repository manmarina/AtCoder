# 入力
n = int(input())
a = list(map(int, input().split()))

# 計算
sum_ = 0
for i in range(n):  # a1 ~ aN
    while a[i] % 2 == 0:  # 2で割り切れる間割り続ける
        a[i] //= 2
        sum_ += 1  # 割った回数をカウント

# 出力
print(sum_)

"""
数学的な気づき系
3倍しても、2で割れる回数は増えないし、減らないことに気づく

「3倍する」 操作はその後の操作回数に何ら影響を及ぼしません。
すなわち、「3 倍する」は 「何もしない」 という条件に置き換えることができます。
よって、各操作は 「𝑁 個すべての数に対して、その数を 「2 で割る」 または 「そのままにする」 のどちらかを選ぶが、
全部そのままにすることはできない」というように置き換えられます。

「2 で割る」 ことによって残り操作回数は減りますが、
「そのままにする」 は残り操作回数が減らないので、各操作で 「2 で割る」 個数を最小化、
すなわち 「2 で割る」 個数を 1 個にすることを考えます。
したがって、1 回の操作で 「𝑁 個の数の中から 1 つ選び、これを 2 で割る」 に置き換えることができます。

答えは (a1 が 2 で割れる回数) + (a2 が 2 で割れる回数) + … +(aN が 2 で割れる回数) となります。
"""
