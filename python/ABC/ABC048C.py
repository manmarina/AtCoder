N, x = map(int, input().split())
a = list(map(int, input().split()))

# 左端の箱のキャンディがxより多い時、xになるまで食べる
ans = 0
if a[0] > x:
    ans = a[0] - x
    a[0] = x

# 2つの箱のキャンディの合計がxより多い時、右の箱のキャンディを食べる
for i in range(N - 1):
    a2 = a[i] + a[i + 1]
    if a2 > x:
        ans += a2 - x
        a[i + 1] -= a2 - x
print(ans)

"""
貪欲法

この手の問題では「端から順に考えていく」ことが有効であることが多々ある。
今回も左端の 2 要素 a1 と a2について考えてみよう。

ここでパッと思いつくことは、a1を減らすよりも、
a2を減らした方が、後々得であるということだ。
より詳しく言えば、a1を減らしても a1+a2≤xという制約にしか効いてこないが、
a2を減らすと a1+a2≤xという制約だけでなく a2+a3≤xという制約にも効いてくるのだ。

というわけで、基本的には a2を減らすこととする。ただし注意点として、
a1>xである場合には、a1=xとなるまで a1を減らす必要がある。

よって、最初の 2 要素 a1,a2については、次のようにすればよい。

a1>xである場合には、a1=xとなるまで a1を減らす
その後、a1+a2>xである場合には、a1+a2=xとなるまで a2を減らす。
"""
