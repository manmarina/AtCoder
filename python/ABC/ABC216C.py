N = int(input())

ans = []
while N > 0:
    if N % 2 == 1:
        N -= 1
        ans.append('A')
    else:
        N //= 2
        ans.append('B')

print(*ans[::-1], sep='')

"""
後ろから貪欲法
自力解

前向きに作るより“逆操作で N から 1 へ戻る”のがラクな典型です。

核心アイデア（逆から貪欲）
最後の操作を考える：
    N が奇数なら、最後は A（+1）しかありえません。直前は N-1。
    N が偶数なら、最後は B（x2）しかありえません。直前は N/2。
これを N=1 になるまで繰り返すと、後ろから見た操作列が手に入ります。
最後に 反転すれば答え。

例
N=14
14(偶)→B, 7(奇)→A, 6(偶)→B, 3(奇)→A, 2(偶)→B, 1 で終了
逆順に集めた B A B A B を反転 → BABAB
"""
