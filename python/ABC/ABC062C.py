H, W = map(int, input().split())
res = H * W  # 最大値をセット


def sub(h: int, w: int):
    # 半分に割った大きさを計算
    if h % 2 == 0 or w % 2 == 0:  # どちらかが偶数の場合
        return h * w // 2, h * w // 2
    if h > w:  # どちらも奇数の場合
        h, w = w, h  # 長い方の辺を割る
    return h * (w + 1) // 2, h * (w - 1) // 2


# 全探索
# まず横方向に最初に切るパターンを試す
for h in range(1, H):
    a = [0] * 3
    a[0] = h * W
    a[1], a[2] = sub(H - h, W)
    a.sort()  # ソートするのでa[0]が最小、a[2]が最大になる
    res = min(res, a[2] - a[0])

# 次に縦方向に最初に切るパターンを試す
for w in range(1, W):
    a = [0] * 3
    a[0] = H * w
    a[1], a[2] = sub(H, W - w)
    a.sort()
    res = min(res, a[2] - a[0])

print(res)

"""
全探索
最適解の形を丁寧に場合分けして考える系
けんちょん

HxWの板チョコレートを 3 つの長方形に割りたい。
そのときの 3 つの長方形の面積の最大値と最小値の差の最小値を求めよ。

まず思ったのは、H,Wのうちの少なくとも一方が 3 の倍数であったら三等分できて 0 になる。

そうでない場合、とりあえず一つ言えるのは、3 つの長方形のうちの
 1 つは、「H x w」か「h x W」の形になる。このくらいは全探索できる。

そして残る長方形については、どうあっても差が最小になるようにすればよい。
    2辺のうちの少なくとも一方が偶数だったら綺麗に二等分
    そうでない場合は、辺の長さが小さい方の辺に沿って割る
とすれば OK。
"""
