import sys

input = sys.stdin.readline
N = int(input())
A = [int(input()) for _ in range(N)]
S = sum(A)
if S % 10 != 0:
    print(S)
    exit()

# 10で割り切れない札の最小を探す
m = min((x for x in A if x % 10 != 0), default=None)
if m is None:
    print(0)
else:
    print(S - m)

"""
貪欲法(Greedy)系
チャッピー
記法は異なるが同じロジック

合計を最大にしたい → まず全部取るのが最適。
ただし「10の倍数」という制約に引っかかったときだけ、1枚外せばよい。
外すなら「10で割り切れない札の最小値」が最適。
この “局所的に最良を選んでよい” という発想は典型的な 貪欲法。

問題の要約
N枚の点数札(1〜100)。合計点をできるだけ大きくしたい。
ただし 合計が 10 の倍数だと 0 点扱い になる（＝その合計は採用不可）。
使う札は好きに選べる(0枚も可)。

核心アイデア
まず 全部足した合計 S が 10 の倍数でなければ、そのまま S が答え（最大）。
もし S が 10 の倍数 なら、使う札を1枚だけ外して合計を 10 の倍数でなくす必要がある。
このとき外す候補は 点数が 10 の倍数でない札 に限る(10 の倍数を外しても 10 の倍数のまま）。
なるべく合計を大きく保つため、外す点数は最小が最適。

もし「10 の倍数でない札」が 1枚もない(= 全部 10 の倍数）なら、どうやっても合計は 10 の倍数になるので 答えは 0。
"""
